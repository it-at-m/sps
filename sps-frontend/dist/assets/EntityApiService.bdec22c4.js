import{F as g,E as u,L as E}from"./index.5c2e6855.js";const i="/api/beispielprojekt-backend-service",$=["GET","POST","PUT","PATCH","DELETE"],R=[{methods:$,statusCode:404,message:"Dieser Datensatz wurde nicht gefunden."},{methods:["DELETE"],statusCode:409,message:"Dieser Datensatz kann nicht gel\xF6scht werden, da er von anderen Teilen des Programms noch ben\xF6tigt wird."}],T="Ein unbekannter Fehler ist aufgetreten, bitte den Administrator informieren.";class r{constructor(e,o){this.entitySingular=e,this.entityPlural=o,this.entityBaseUrl=`${i}/${o}`}get(e,o=[]){return new Promise((s,t)=>{fetch(`${this.entityBaseUrl}/${e}`,g.getGETConfig()).then(n=>{n.status!=200&&(r.handleWrongResponse("GET",n),t()),n.json().then(a=>{const l=o.map(h=>new Promise((f,c)=>{fetch(r.removeProjectionsFromUrl(a._links[h].href),g.getGETConfig()).then(m=>{m.ok?m.json().then(d=>{if("_embedded"in d){const P=Object.keys(d._embedded)[0];d=d._embedded[P]}a[h]=d,f()}).catch(d=>c(r.handleError(d))):m.status==404?(a[h]=null,f()):(r.handleWrongResponse("GET",m),c())})}));Promise.all(l).then(()=>{s(a)}).catch(h=>t(r.handleError(h)))}).catch(a=>t(r.handleError(a)))}).catch(n=>t(r.handleError(n)))})}getAllPaged(e,o=20,s=null){return new Promise((t,n)=>{let a=`${this.entityBaseUrl}?page=${e}&size=${o}`;s!==null&&(a=`${a}&projection=${s}`),fetch(a,g.getGETConfig()).then(l=>{if(l.status!=200)return r.handleWrongResponse("GET",l),n();l.json().then(h=>{const f=h._embedded[this.entityPlural];t({data:f,page:h.page.number,pageSize:h.page.size,totalElements:h.page.totalElements,totalPages:h.page.totalPages})}).catch(h=>n(h))}).catch(l=>n(r.handleError(l)))})}delete(e){return new Promise((o,s)=>{fetch(`${this.entityBaseUrl}/${e}`,g.getDELETEConfig()).then(t=>{if(t.ok)return o();r.handleWrongResponse("DELETE",t)}).catch(t=>s(r.handleError(t)))})}create(e){return new Promise((o,s)=>{fetch(`${this.entityBaseUrl}`,g.getPOSTConfig(e)).then(t=>{t.json().then(n=>{if(t.ok)return o(n);r.handleWrongResponse("POST",t),s()}).catch(n=>s(r.handleError(n)))}).catch(t=>s(r.handleError(t)))})}createRelation(e,o,s,t){const n=g.getPUTConfig("");return n.headers.set("Content-Type","text/uri-list"),n.body=`${i}/${s}/${t}`,new Promise((a,l)=>{fetch(`${this.entityBaseUrl}/${e.id}/${o}`,n).then(h=>{if(h.ok)return a();r.handleWrongResponse("PUT",h),l()})})}update(e){return new Promise((o,s)=>{var t;fetch(`${this.entityBaseUrl}/${(t=e.id)==null?void 0:t.toString()}`,g.getPUTConfig(e)).then(n=>{n.json().then(a=>{if(n.ok)return o(a);r.handleWrongResponse("PUT",n),s()}).catch(a=>s(r.handleError(a)))}).catch(n=>s(r.handleError(n)))})}static handleWrongResponse(e,o){for(const s of R)if(s.methods.includes(e)&&o.status==s.statusCode)throw new u({level:E.ERROR,message:s.message});throw new u({level:E.ERROR,message:`${T} - HTTP Status Code: ${o.status}`})}static handleError(e){return e.level!==void 0?e:new u({message:T})}static removeProjectionsFromUrl(e){const o=/{?[^{}]+}/gm;for(;e.indexOf("{?")>=0;)e=e.replace(o,"");return e}}export{r as E};
